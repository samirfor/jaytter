/*
 * Copyright (C) 2011 joao-nb
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */

/*
 * GenericTweetTimelinePanel.java
 *
 * Created on 29/06/2011, 00:15:19
 */
package org.jaytter.ui.panels.impl;

import java.awt.Color;
import javax.swing.JPanel;

/**
 *
 * @author joao-nb
 */
public class GenericTweetTimelinePanel extends javax.swing.JPanel {

    /** Creates new form GenericTweetTimelinePanel */
    public GenericTweetTimelinePanel(String name) {
        initComponents();

        _setupGrids();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        setLayout(new java.awt.GridBagLayout());
    }// </editor-fold>//GEN-END:initComponents
    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables

    private void _setupGrids() {
        int height = getSize().height;

        for (int i = 0; i < 30; i++) {
            JPanel p = new JPanel();
            p.setBackground( new Color( 100, 200, 100 ));
            java.awt.GridBagConstraints gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = i;
            gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
            gridBagConstraints.ipadx = 320;
            gridBagConstraints.ipady = 30;
            gridBagConstraints.weightx = 20.0;
            add(p, gridBagConstraints);
        }
        
        repaint();
    }
}
